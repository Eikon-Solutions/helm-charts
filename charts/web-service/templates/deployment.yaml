apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
spec:
  {{- if not .Values.hpa.deploy }}
  replicas: {{ .Values.deployment.replicas }}
  {{- end }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "common.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if .Values.deployment.podAnnotations }}
      annotations:
        {{- toYaml .Values.deployment.podAnnotations | nindent 8 }}
      {{- end }}
      labels:
        {{- include "common.selectorLabels" . | nindent 8 }}
    spec:
      {{- if or .Values.dockerconfigjson.username .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- if .Values.dockerconfigjson.username }}
        - name: {{ .Values.dockerconfigjson.name | default (printf "%s-registry" (include "common.fullname" .)) }}
        {{- end }}
        {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ include "common.image" . }}
          imagePullPolicy: {{ include "common.imagePullPolicy" . }}
          {{- if .Values.config.command }}
          command:
            {{- toYaml .Values.config.command | nindent 12 }}
          {{- end }}
          {{- if .Values.config.args }}
          args:
            {{- toYaml .Values.config.args | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort | default .Values.service.port }}
              protocol: TCP
          {{- if or .Values.readinessProbe.httpGet.path .Values.readinessProbe.exec.command }}
          readinessProbe:
            {{- if .Values.readinessProbe.httpGet.path }}
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.readinessProbe.httpGet.port | default "http" }}
            {{- else if .Values.readinessProbe.exec.command }}
            exec:
              command:
                {{- toYaml .Values.readinessProbe.exec.command | nindent 16 }}
            {{- end }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          {{- end }}
          {{- if or .Values.livenessProbe.httpGet.path .Values.livenessProbe.exec.command }}
          livenessProbe:
            {{- if .Values.livenessProbe.httpGet.path }}
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.livenessProbe.httpGet.port | default "http" }}
            {{- else if .Values.livenessProbe.exec.command }}
            exec:
              command:
                {{- toYaml .Values.livenessProbe.exec.command | nindent 16 }}
            {{- end }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.config.env .Values.config.secrets .Values.config.secretsB64 }}
          env:
            {{- range $key, $value := .Values.config.env }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "common.fullname" $ }}
                  key: {{ $key }}
            {{- end }}
            {{- if or .Values.config.secrets .Values.config.secretsB64 }}
            {{- range $key, $value := .Values.config.secrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "common.fullname" $ }}-secrets
                  key: {{ $key }}
            {{- end }}
            {{- range $key, $value := .Values.config.secretsB64 }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "common.fullname" $ }}-secrets
                  key: {{ $key }}
            {{- end }}
            {{- end }}
          {{- end }}
          {{- if or .Values.persistentVolume.enabled .Values.configMaps }}
          volumeMounts:
            {{- if .Values.persistentVolume.enabled }}
            - name: storage
              mountPath: {{ .Values.persistentVolume.mountPath }}
              {{- if .Values.persistentVolume.subPath }}
              subPath: {{ .Values.persistentVolume.subPath }}
              {{- end }}
            {{- end }}
            {{- range .Values.configMaps }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- if .mountPropagation }}
              mountPropagation: {{ .mountPropagation }}
              {{- end }}
              {{- if .readOnly }}
              readOnly: {{ .readOnly }}
              {{- end }}
            {{- end }}
          {{- end }}
      {{- if or .Values.persistentVolume.enabled .Values.configMaps }}
      volumes:
        {{- if .Values.persistentVolume.enabled }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ include "common.fullname" . }}-storage
        {{- end }}
        {{- range .Values.configMaps }}
        - name: {{ .name }}
          configMap:
            name: {{ include "common.fullname" $ }}-{{ .name }}
        {{- end }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}